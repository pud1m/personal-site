
$animationsEaseOutQuint: cubic-bezier(0.22, 1, 0.36, 1);
$animationsEaseInOutQuint: cubic-bezier(0.83, 0, 0.17, 1);
$animationsEaseOutBack: cubic-bezier(0.34, 1.56, 0.64, 1);

@mixin transition($property: all, $duration: 0.3s, $ease: $animationsEaseOutQuint) {
  transition: $property $duration $ease;
}

@keyframes fadeIn {
  0% {
    opacity: 0;
    filter: blur(4px);
  }
  100% {
    opacity: 1;
  }
}

@keyframes fromLeft {
  0% {
    transform: translateX(-100%);
    opacity: 0;
    filter: blur(4px);
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes fromRight {
  0% {
    transform: translateX(100%);
    opacity: 0;
    filter: blur(4px);
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateX(0);
    opacity: 1;
  }
}
@keyframes fromBelow {
  0% {
    transform: translateY(100%);
    opacity: 0;
    filter: blur(2px);
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes grow {
  0% {
    transform: scale(0);
    opacity: 0;
    filter: blur(2px);
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes floatLoop {
  0% { transform: translate(0,  0px); }
  50%  { transform: translate(0, 8px); }
  100%   { transform: translate(0, -0px); }  
}

@mixin animate-fadeIn($duration: 0.5s, $delay: 0s, $ease: $animationsEaseOutQuint) {
  opacity: 0;
  animation: fadeIn $duration $ease $delay 1 normal forwards;
}
@mixin animate-fromLeft($duration: 0.5s, $delay: 0s, $ease: $animationsEaseOutQuint) {
  transform: translateX(-100%);
  opacity: 0;
  animation: fromLeft $duration $ease $delay 1 normal forwards;
}
@mixin animate-fromRight($duration: 0.5s, $delay: 0s, $ease: $animationsEaseOutQuint) {
  transform: translateX(100%);
  opacity: 0;
  animation: fromRight $duration $ease $delay 1 normal forwards;
}
@mixin animate-fromBelow($duration: 0.5s, $delay: 0s, $ease: $animationsEaseOutQuint) {
  transform: translateY(100%);
  opacity: 1;
  animation: fromBelow $duration $ease $delay 1 normal forwards;
}

@mixin animate-in-grow($duration: 0.5s, $delay: 0s, $ease: $animationsEaseOutQuint) {
  @include transition(all, $duration, $ease);
  transform: scale(0);
  opacity: 0;
  animation: grow $duration $ease $delay 1 normal forwards;
}

@mixin animate-float($duration: 4s, $delay: 0s, $ease: ease-in-out) {
  // floats in a loop
  animation: floatLoop $duration $ease $delay infinite normal forwards;
}